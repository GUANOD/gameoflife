{"version":3,"sources":["components/Table.js","components/Form.js","App.js","index.js"],"names":["Table","state","run","interval","grid","props","handleGridChange","i","j","console","log","newGrid","table","setState","runSim","setRunning","setInterval","forEach","row","rows","columns","cells","push","speed","stopSim","clearInterval","this","className","width","map","elm","td","style","background","color","onClick","size","height","running","Component","Form","handleChange","target","value","name","createGrid","handleSpeed","setSpeed","htmlFor","type","id","maxLength","onChange","e","disabled","min","max","step","handleSize","setColor","preventDefault","App","useState","setSize","setGrid","setWidth","setColumns","child","useRef","useEffect","current","changeSpeed","option","length","arr","Math","random","Fragment","ref","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa8a8f3e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Table extends Component {\r\n  state = {\r\n    run: 0,\r\n    interval: \"\",\r\n    grid: this.props.grid,\r\n  };\r\n\r\n  handleGridChange = (i, j) => {\r\n    console.log(i, j);\r\n    let newGrid = [...this.state.grid];\r\n    console.log(\"stategrid\", this.state.grid);\r\n    console.log(\"newGrid\", newGrid);\r\n    newGrid[i][j] = newGrid[i][j] === 1 ? \"\" : 1;\r\n    console.table(newGrid);\r\n    this.setState({ grid: newGrid });\r\n  };\r\n\r\n  runSim = () => {\r\n    this.props.setRunning(true);\r\n    let interval = setInterval(() => {\r\n      let grid = [...this.state.grid];\r\n\r\n      let newGrid = [];\r\n\r\n      grid.forEach((row, i) => {\r\n        let rows = [];\r\n\r\n        grid[i].forEach((columns, j) => {\r\n          let cells = 0;\r\n          if (grid[i][j + 1] === 1) cells++;\r\n          if (grid[i][j - 1] === 1) cells++;\r\n          if (grid[i + 1] && grid[i + 1][j] === 1) cells++;\r\n          if (grid[i + 1] && grid[i + 1][j - 1] === 1) cells++;\r\n          if (grid[i + 1] && grid[i + 1][j + 1] === 1) cells++;\r\n          if (grid[i - 1] && grid[i - 1][j] === 1) cells++;\r\n          if (grid[i - 1] && grid[i - 1][j - 1] === 1) cells++;\r\n          if (grid[i - 1] && grid[i - 1][j + 1] === 1) cells++;\r\n\r\n          if (grid[i][j] === 1 && (cells === 2 || cells === 3)) {\r\n            rows.push(1);\r\n          } else if (grid[i][j] !== 1 && cells === 3) {\r\n            rows.push(1);\r\n          } else {\r\n            rows.push(\"\");\r\n          }\r\n        });\r\n\r\n        newGrid.push(rows);\r\n      });\r\n\r\n      this.setState({ grid: newGrid });\r\n    }, this.props.speed);\r\n\r\n    this.setState({ interval });\r\n  };\r\n\r\n  stopSim = () => {\r\n    clearInterval(this.state.interval);\r\n    this.props.setRunning(false);\r\n  };\r\n\r\n  changeSpeed() {\r\n    this.stopSim();\r\n    this.runSim();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"gameContainer\">\r\n        <table width={this.props.width} className=\"game\">\r\n          <tbody>\r\n            {this.state.grid.map((elm, i) => {\r\n              return (\r\n                <tr key={i}>\r\n                  {elm.map((td, j) => {\r\n                    return (\r\n                      <td\r\n                        key={j}\r\n                        className={\"cell\"}\r\n                        style={\r\n                          this.state.grid[i][j] === 1\r\n                            ? { background: this.props.color }\r\n                            : {}\r\n                        }\r\n                        onClick={() => this.handleGridChange(i, j)}\r\n                        width={this.props.size}\r\n                        height={this.props.size}\r\n                      ></td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <button\r\n          onClick={\r\n            this.props.running ? () => this.stopSim() : () => this.runSim()\r\n          }\r\n          className={this.props.running ? \"stop\" : \"start\"}\r\n        >\r\n          {this.props.running ? \"Stop\" : \"Start\"}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nconst speed = [1000, 900, 800, 700, 600, 500, 400, 300, 200, 100];\r\n\r\nclass Form extends Component {\r\n  state = { rows: \"\", columns: \"\", size: \"\", speed: \"\", color: \"#000000\" };\r\n\r\n  handleChange = (target) => {\r\n    console.log(target.value);\r\n    this.setState(\r\n      { [target.name]: target.value > 100 ? 100 : target.value },\r\n      () => {\r\n        this.props.createGrid(this.state.rows, this.state.columns, false);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleSpeed = (value) => {\r\n    this.setState({ speed: value });\r\n    this.props.setSpeed(speed[this.state.speed]);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"inputs\">\r\n        <label htmlFor=\"rows\">Rows</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"rows\"\r\n          maxLength=\"2\"\r\n          name=\"rows\"\r\n          value={this.state.rows}\r\n          onChange={(e) => this.handleChange(e.target)}\r\n          disabled={this.props.run}\r\n        ></input>\r\n\r\n        <label htmlFor=\"columns\">Columns</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"columns\"\r\n          name=\"columns\"\r\n          value={this.state.columns}\r\n          maxLength=\"2\"\r\n          onChange={(e) => this.handleChange(e.target)}\r\n          disabled={this.props.run}\r\n        ></input>\r\n\r\n        <label htmlFor=\"size\">Size</label>\r\n        <input\r\n          type=\"range\"\r\n          min=\"10\"\r\n          max=\"30\"\r\n          id=\"size\"\r\n          name=\"size\"\r\n          value={this.state.size}\r\n          step=\"1\"\r\n          onChange={(e) =>\r\n            this.setState({ size: e.target.value }, () =>\r\n              this.props.handleSize(this.state.size)\r\n            )\r\n          }\r\n        ></input>\r\n\r\n        <label htmlFor=\"speed\">Speed</label>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"10\"\r\n          id=\"speed\"\r\n          name=\"speed\"\r\n          value={this.state.speed}\r\n          step=\"1\"\r\n          onChange={(e) => this.handleSpeed(e.target.value)}\r\n        ></input>\r\n\r\n        <label htmlFor=\"color\">Color</label>\r\n        <input\r\n          type=\"color\"\r\n          id=\"color\"\r\n          name=\"color\"\r\n          value={this.state.color}\r\n          onChange={(e) =>\r\n            this.setState({ color: e.target.value }, () => {\r\n              this.props.setColor(this.state.color);\r\n            })\r\n          }\r\n        ></input>\r\n        <button\r\n          className=\"random\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            this.props.createGrid(this.state.rows, this.state.columns, true);\r\n          }}\r\n        >\r\n          Randomize\r\n        </button>\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            this.props.createGrid(this.state.rows, this.state.columns);\r\n          }}\r\n        >\r\n          Reset\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import \"./App.css\";\r\nimport Table from \"./components/Table\";\r\nimport Form from \"./components/Form\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\n\r\nfunction App() {\r\n  const [size, setSize] = useState(20);\r\n  const [grid, setGrid] = useState([]);\r\n  const [width, setWidth] = useState(\"\");\r\n  const [running, setRunning] = useState(false);\r\n  const [speed, setSpeed] = useState(500);\r\n  const [columns, setColumns] = useState(\"\");\r\n  const [color, setColor] = useState(\"#000\");\r\n  const child = useRef();\r\n\r\n  function handleSize(size) {\r\n    setSize(size);\r\n    setWidth(columns * size);\r\n  }\r\n\r\n  function createGrid(rows, columns, option) {\r\n    if (grid.length) child.current.stopSim();\r\n\r\n    setColumns(columns);\r\n    setWidth(columns * size);\r\n    if (rows && columns) {\r\n      let arr = [];\r\n      for (let i = 1; i <= rows; i++) {\r\n        let row = [];\r\n        for (let j = 1; j <= columns; j++) {\r\n          if (option) {\r\n            Math.random() > 0.3 ? row.push(\"\") : row.push(1);\r\n          } else {\r\n            row.push(\"\");\r\n          }\r\n        }\r\n        arr.push(row);\r\n      }\r\n      setGrid(arr);\r\n    } else {\r\n      setGrid([]);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!running) return;\r\n    child.current.changeSpeed();\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {console.log(\"app\", grid)}\r\n      <Form\r\n        setWidth={setWidth}\r\n        createGrid={createGrid}\r\n        setSpeed={setSpeed}\r\n        handleSize={handleSize}\r\n        setColor={setColor}\r\n      />\r\n      {grid.length ? (\r\n        <React.Fragment>\r\n          <Table\r\n            key={JSON.stringify(grid)}\r\n            width={width}\r\n            grid={grid}\r\n            size={size ? size : 20}\r\n            setRunning={setRunning}\r\n            running={running}\r\n            speed={speed}\r\n            ref={child}\r\n            color={color}\r\n          />\r\n        </React.Fragment>\r\n      ) : (\r\n        <p>No input</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}